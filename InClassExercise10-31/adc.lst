
adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000008f8  0000098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005c  00800100  00800100  0000098c  2**0
                  ALLOC
  3 .stab         00001680  00000000  00000000  0000098c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001129  00000000  00000000  0000200c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003135  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003148  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  2c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  30:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  34:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  58:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  5c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  60:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  64:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  68:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  6c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  70:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  74:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  78:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  7c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  80:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  84:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  88:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	ac 35       	cpi	r26, 0x5C	; 92
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <main>
  ac:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <_exit>

000000b0 <__bad_interrupt>:
  b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b4 <spi_init>:
div_t    fp_adc_result, fp_low_result;  //double fp_adc_result; 

/*******************************************************/
void spi_init(void){
 /* Run this code before attempting to write to the LCD.*/
 DDRF  |= 0x08;  //port F bit 3 is enable for LCD
  b4:	e1 e6       	ldi	r30, 0x61	; 97
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	80 83       	st	Z, r24
 PORTF &= 0xF7;  //port F bit 3 is initially low
  be:	e2 e6       	ldi	r30, 0x62	; 98
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	87 7f       	andi	r24, 0xF7	; 247
  c6:	80 83       	st	Z, r24

 DDRB  |= 0x07;  //Turn on SS, MOSI, SCLK
  c8:	87 b3       	in	r24, 0x17	; 23
  ca:	87 60       	ori	r24, 0x07	; 7
  cc:	87 bb       	out	0x17, r24	; 23
 PORTB |= _BV(PB1);  //port B initalization for SPI, SS_n off
  ce:	c1 9a       	sbi	0x18, 1	; 24
//see: /$install_path/avr/include/avr/iom128.h for bit definitions   

 //Master mode, Clock=clk/4, Cycle half phase, Low polarity, MSB first
 SPCR=(1<<SPE) | (1<<MSTR); //enable SPI, clk low initially, rising edge sample
  d0:	80 e5       	ldi	r24, 0x50	; 80
  d2:	8d b9       	out	0x0d, r24	; 13
 SPSR=(1<<SPI2X);           //SPI at 2x speed (8 MHz)  
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	8e b9       	out	0x0e, r24	; 14
  d8:	08 95       	ret

000000da <send_lcd>:
  da:	91 e0       	ldi	r25, 0x01	; 1
  dc:	81 11       	cpse	r24, r1
  de:	01 c0       	rjmp	.+2      	; 0xe2 <send_lcd+0x8>
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	9f b9       	out	0x0f, r25	; 15
  e4:	77 9b       	sbis	0x0e, 7	; 14
  e6:	fe cf       	rjmp	.-4      	; 0xe4 <send_lcd+0xa>
  e8:	6f b9       	out	0x0f, r22	; 15
  ea:	77 9b       	sbis	0x0e, 7	; 14
  ec:	fe cf       	rjmp	.-4      	; 0xea <send_lcd+0x10>
  ee:	80 91 62 00 	lds	r24, 0x0062
  f2:	88 60       	ori	r24, 0x08	; 8
  f4:	80 93 62 00 	sts	0x0062, r24
  f8:	80 91 62 00 	lds	r24, 0x0062
  fc:	87 7f       	andi	r24, 0xF7	; 247
  fe:	80 93 62 00 	sts	0x0062, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	8f e9       	ldi	r24, 0x9F	; 159
 104:	9f e0       	ldi	r25, 0x0F	; 15
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <send_lcd+0x2c>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <send_lcd+0x32>
 10c:	00 00       	nop
 10e:	08 95       	ret

00000110 <refresh_lcd>:
 110:	21 e0       	ldi	r18, 0x01	; 1
 112:	2f b9       	out	0x0f, r18	; 15
 114:	77 9b       	sbis	0x0e, 7	; 14
 116:	fe cf       	rjmp	.-4      	; 0x114 <refresh_lcd+0x4>
 118:	20 91 00 01 	lds	r18, 0x0100
 11c:	fc 01       	movw	r30, r24
 11e:	e2 0f       	add	r30, r18
 120:	f1 1d       	adc	r31, r1
 122:	80 81       	ld	r24, Z
 124:	8f b9       	out	0x0f, r24	; 15
 126:	77 9b       	sbis	0x0e, 7	; 14
 128:	fe cf       	rjmp	.-4      	; 0x126 <refresh_lcd+0x16>
 12a:	80 91 62 00 	lds	r24, 0x0062
 12e:	88 60       	ori	r24, 0x08	; 8
 130:	80 93 62 00 	sts	0x0062, r24
 134:	80 91 62 00 	lds	r24, 0x0062
 138:	87 7f       	andi	r24, 0xF7	; 247
 13a:	80 93 62 00 	sts	0x0062, r24
 13e:	80 91 00 01 	lds	r24, 0x0100
 142:	8f 5f       	subi	r24, 0xFF	; 255
 144:	80 93 00 01 	sts	0x0100, r24
 148:	80 31       	cpi	r24, 0x10	; 16
 14a:	81 f0       	breq	.+32     	; 0x16c <refresh_lcd+0x5c>
 14c:	80 32       	cpi	r24, 0x20	; 32
 14e:	09 f0       	breq	.+2      	; 0x152 <refresh_lcd+0x42>
 150:	08 95       	ret
 152:	85 ed       	ldi	r24, 0xD5	; 213
 154:	8a 95       	dec	r24
 156:	f1 f7       	brne	.-4      	; 0x154 <refresh_lcd+0x44>
 158:	00 00       	nop
 15a:	4c ed       	ldi	r20, 0xDC	; 220
 15c:	55 e0       	ldi	r21, 0x05	; 5
 15e:	62 e0       	ldi	r22, 0x02	; 2
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 166:	10 92 00 01 	sts	0x0100, r1
 16a:	08 95       	ret
 16c:	85 ed       	ldi	r24, 0xD5	; 213
 16e:	8a 95       	dec	r24
 170:	f1 f7       	brne	.-4      	; 0x16e <refresh_lcd+0x5e>
 172:	00 00       	nop
 174:	4c ed       	ldi	r20, 0xDC	; 220
 176:	55 e0       	ldi	r21, 0x05	; 5
 178:	60 ec       	ldi	r22, 0xC0	; 192
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 180:	80 91 00 01 	lds	r24, 0x0100
 184:	e3 cf       	rjmp	.-58     	; 0x14c <refresh_lcd+0x3c>

00000186 <set_custom_character>:
 186:	ef 92       	push	r14
 188:	ff 92       	push	r15
 18a:	0f 93       	push	r16
 18c:	1f 93       	push	r17
 18e:	cf 93       	push	r28
 190:	df 93       	push	r29
 192:	1f 92       	push	r1
 194:	cd b7       	in	r28, 0x3d	; 61
 196:	de b7       	in	r29, 0x3e	; 62
 198:	18 2f       	mov	r17, r24
 19a:	66 0f       	add	r22, r22
 19c:	66 0f       	add	r22, r22
 19e:	66 0f       	add	r22, r22
 1a0:	60 5c       	subi	r22, 0xC0	; 192
 1a2:	48 ee       	ldi	r20, 0xE8	; 232
 1a4:	53 e0       	ldi	r21, 0x03	; 3
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	99 83       	std	Y+1, r25	; 0x01
 1aa:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 1ae:	e1 2e       	mov	r14, r17
 1b0:	99 81       	ldd	r25, Y+1	; 0x01
 1b2:	f9 2e       	mov	r15, r25
 1b4:	87 01       	movw	r16, r14
 1b6:	08 5f       	subi	r16, 0xF8	; 248
 1b8:	1f 4f       	sbci	r17, 0xFF	; 255
 1ba:	f7 01       	movw	r30, r14
 1bc:	61 91       	ld	r22, Z+
 1be:	7f 01       	movw	r14, r30
 1c0:	44 e6       	ldi	r20, 0x64	; 100
 1c2:	50 e0       	ldi	r21, 0x00	; 0
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 1ca:	e0 16       	cp	r14, r16
 1cc:	f1 06       	cpc	r15, r17
 1ce:	a9 f7       	brne	.-22     	; 0x1ba <set_custom_character+0x34>
 1d0:	0f 90       	pop	r0
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	ff 90       	pop	r15
 1dc:	ef 90       	pop	r14
 1de:	08 95       	ret

000001e0 <set_cursor>:
 1e0:	90 e4       	ldi	r25, 0x40	; 64
 1e2:	89 9f       	mul	r24, r25
 1e4:	60 0d       	add	r22, r0
 1e6:	11 24       	eor	r1, r1
 1e8:	60 5c       	subi	r22, 0xC0	; 192
 1ea:	48 ee       	ldi	r20, 0xE8	; 232
 1ec:	53 e0       	ldi	r21, 0x03	; 3
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

000001f4 <uint2lcd>:
 1f4:	cf 93       	push	r28
 1f6:	88 23       	and	r24, r24
 1f8:	09 f4       	brne	.+2      	; 0x1fc <uint2lcd+0x8>
 1fa:	3d c0       	rjmp	.+122    	; 0x276 <uint2lcd+0x82>
 1fc:	c8 2f       	mov	r28, r24
 1fe:	84 36       	cpi	r24, 0x64	; 100
 200:	a8 f4       	brcc	.+42     	; 0x22c <uint2lcd+0x38>
 202:	8a 30       	cpi	r24, 0x0A	; 10
 204:	f8 f4       	brcc	.+62     	; 0x244 <uint2lcd+0x50>
 206:	8d ec       	ldi	r24, 0xCD	; 205
 208:	c8 9f       	mul	r28, r24
 20a:	81 2d       	mov	r24, r1
 20c:	11 24       	eor	r1, r1
 20e:	86 95       	lsr	r24
 210:	86 95       	lsr	r24
 212:	86 95       	lsr	r24
 214:	6c 2f       	mov	r22, r28
 216:	2a e0       	ldi	r18, 0x0A	; 10
 218:	82 9f       	mul	r24, r18
 21a:	60 19       	sub	r22, r0
 21c:	11 24       	eor	r1, r1
 21e:	60 5d       	subi	r22, 0xD0	; 208
 220:	44 e6       	ldi	r20, 0x64	; 100
 222:	50 e0       	ldi	r21, 0x00	; 0
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	cf 91       	pop	r28
 228:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>
 22c:	69 e2       	ldi	r22, 0x29	; 41
 22e:	86 9f       	mul	r24, r22
 230:	61 2d       	mov	r22, r1
 232:	11 24       	eor	r1, r1
 234:	62 95       	swap	r22
 236:	6f 70       	andi	r22, 0x0F	; 15
 238:	60 5d       	subi	r22, 0xD0	; 208
 23a:	44 e6       	ldi	r20, 0x64	; 100
 23c:	50 e0       	ldi	r21, 0x00	; 0
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 244:	89 e2       	ldi	r24, 0x29	; 41
 246:	c8 9f       	mul	r28, r24
 248:	81 2d       	mov	r24, r1
 24a:	11 24       	eor	r1, r1
 24c:	82 95       	swap	r24
 24e:	8f 70       	andi	r24, 0x0F	; 15
 250:	9c 2f       	mov	r25, r28
 252:	24 e6       	ldi	r18, 0x64	; 100
 254:	82 9f       	mul	r24, r18
 256:	90 19       	sub	r25, r0
 258:	11 24       	eor	r1, r1
 25a:	6d ec       	ldi	r22, 0xCD	; 205
 25c:	96 9f       	mul	r25, r22
 25e:	61 2d       	mov	r22, r1
 260:	11 24       	eor	r1, r1
 262:	66 95       	lsr	r22
 264:	66 95       	lsr	r22
 266:	66 95       	lsr	r22
 268:	60 5d       	subi	r22, 0xD0	; 208
 26a:	44 e6       	ldi	r20, 0x64	; 100
 26c:	50 e0       	ldi	r21, 0x00	; 0
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 274:	c8 cf       	rjmp	.-112    	; 0x206 <uint2lcd+0x12>
 276:	44 e6       	ldi	r20, 0x64	; 100
 278:	50 e0       	ldi	r21, 0x00	; 0
 27a:	60 e3       	ldi	r22, 0x30	; 48
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	cf 91       	pop	r28
 280:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

00000284 <int2lcd>:
 284:	cf 93       	push	r28
 286:	87 fd       	sbrc	r24, 7
 288:	03 c0       	rjmp	.+6      	; 0x290 <int2lcd+0xc>
 28a:	cf 91       	pop	r28
 28c:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <uint2lcd>
 290:	c8 2f       	mov	r28, r24
 292:	44 e6       	ldi	r20, 0x64	; 100
 294:	50 e0       	ldi	r21, 0x00	; 0
 296:	6d e2       	ldi	r22, 0x2D	; 45
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 29e:	8c 2f       	mov	r24, r28
 2a0:	81 95       	neg	r24
 2a2:	cf 91       	pop	r28
 2a4:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <uint2lcd>

000002a8 <cursor_on>:
 2a8:	48 ee       	ldi	r20, 0xE8	; 232
 2aa:	53 e0       	ldi	r21, 0x03	; 3
 2ac:	6e e0       	ldi	r22, 0x0E	; 14
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

000002b4 <cursor_off>:
 2b4:	48 ee       	ldi	r20, 0xE8	; 232
 2b6:	53 e0       	ldi	r21, 0x03	; 3
 2b8:	6c e0       	ldi	r22, 0x0C	; 12
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

000002c0 <shift_right>:
 2c0:	48 ee       	ldi	r20, 0xE8	; 232
 2c2:	53 e0       	ldi	r21, 0x03	; 3
 2c4:	6e e1       	ldi	r22, 0x1E	; 30
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

000002cc <shift_left>:
 2cc:	48 ee       	ldi	r20, 0xE8	; 232
 2ce:	53 e0       	ldi	r21, 0x03	; 3
 2d0:	68 e1       	ldi	r22, 0x18	; 24
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

000002d8 <strobe_lcd>:
 2d8:	e2 e6       	ldi	r30, 0x62	; 98
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	80 81       	ld	r24, Z
 2de:	88 60       	ori	r24, 0x08	; 8
 2e0:	80 83       	st	Z, r24
 2e2:	80 81       	ld	r24, Z
 2e4:	87 7f       	andi	r24, 0xF7	; 247
 2e6:	80 83       	st	Z, r24
 2e8:	08 95       	ret

000002ea <clear_display>:
 2ea:	40 ed       	ldi	r20, 0xD0	; 208
 2ec:	57 e0       	ldi	r21, 0x07	; 7
 2ee:	61 e0       	ldi	r22, 0x01	; 1
 2f0:	80 e0       	ldi	r24, 0x00	; 0
 2f2:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

000002f6 <cursor_home>:
 2f6:	4c ed       	ldi	r20, 0xDC	; 220
 2f8:	55 e0       	ldi	r21, 0x05	; 5
 2fa:	62 e0       	ldi	r22, 0x02	; 2
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

00000302 <home_line2>:
 302:	4c ed       	ldi	r20, 0xDC	; 220
 304:	55 e0       	ldi	r21, 0x05	; 5
 306:	60 ec       	ldi	r22, 0xC0	; 192
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

0000030e <fill_spaces>:
 30e:	cf 93       	push	r28
 310:	c0 e1       	ldi	r28, 0x10	; 16
 312:	44 e6       	ldi	r20, 0x64	; 100
 314:	50 e0       	ldi	r21, 0x00	; 0
 316:	60 e2       	ldi	r22, 0x20	; 32
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 31e:	c1 50       	subi	r28, 0x01	; 1
 320:	c1 f7       	brne	.-16     	; 0x312 <fill_spaces+0x4>
 322:	cf 91       	pop	r28
 324:	08 95       	ret

00000326 <char2lcd>:
 326:	44 e6       	ldi	r20, 0x64	; 100
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	68 2f       	mov	r22, r24
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

00000332 <string2lcd>:
 332:	0f 93       	push	r16
 334:	1f 93       	push	r17
 336:	cf 93       	push	r28
 338:	8c 01       	movw	r16, r24
 33a:	40 e0       	ldi	r20, 0x00	; 0
 33c:	50 e0       	ldi	r21, 0x00	; 0
 33e:	c0 e0       	ldi	r28, 0x00	; 0
 340:	f8 01       	movw	r30, r16
 342:	e4 0f       	add	r30, r20
 344:	f5 1f       	adc	r31, r21
 346:	44 e6       	ldi	r20, 0x64	; 100
 348:	50 e0       	ldi	r21, 0x00	; 0
 34a:	60 81       	ld	r22, Z
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 352:	cf 5f       	subi	r28, 0xFF	; 255
 354:	4c 2f       	mov	r20, r28
 356:	50 e0       	ldi	r21, 0x00	; 0
 358:	f8 01       	movw	r30, r16
 35a:	01 90       	ld	r0, Z+
 35c:	00 20       	and	r0, r0
 35e:	e9 f7       	brne	.-6      	; 0x35a <string2lcd+0x28>
 360:	9f 01       	movw	r18, r30
 362:	20 1b       	sub	r18, r16
 364:	31 0b       	sbc	r19, r17
 366:	22 50       	subi	r18, 0x02	; 2
 368:	31 09       	sbc	r19, r1
 36a:	24 17       	cp	r18, r20
 36c:	35 07       	cpc	r19, r21
 36e:	40 f7       	brcc	.-48     	; 0x340 <string2lcd+0xe>
 370:	cf 91       	pop	r28
 372:	1f 91       	pop	r17
 374:	0f 91       	pop	r16
 376:	08 95       	ret

00000378 <lcd_init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 378:	8f ef       	ldi	r24, 0xFF	; 255
 37a:	99 ef       	ldi	r25, 0xF9	; 249
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <lcd_init+0x4>
 380:	00 c0       	rjmp	.+0      	; 0x382 <lcd_init+0xa>
 382:	00 00       	nop
 384:	88 e0       	ldi	r24, 0x08	; 8
 386:	80 93 61 00 	sts	0x0061, r24
 38a:	48 e5       	ldi	r20, 0x58	; 88
 38c:	5b e1       	ldi	r21, 0x1B	; 27
 38e:	60 e3       	ldi	r22, 0x30	; 48
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 396:	48 e5       	ldi	r20, 0x58	; 88
 398:	5b e1       	ldi	r21, 0x1B	; 27
 39a:	60 e3       	ldi	r22, 0x30	; 48
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 3a2:	48 e5       	ldi	r20, 0x58	; 88
 3a4:	5b e1       	ldi	r21, 0x1B	; 27
 3a6:	60 e3       	ldi	r22, 0x30	; 48
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 3ae:	48 e8       	ldi	r20, 0x88	; 136
 3b0:	53 e1       	ldi	r21, 0x13	; 19
 3b2:	68 e3       	ldi	r22, 0x38	; 56
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 3ba:	48 e8       	ldi	r20, 0x88	; 136
 3bc:	53 e1       	ldi	r21, 0x13	; 19
 3be:	68 e0       	ldi	r22, 0x08	; 8
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 3c6:	48 e8       	ldi	r20, 0x88	; 136
 3c8:	53 e1       	ldi	r21, 0x13	; 19
 3ca:	61 e0       	ldi	r22, 0x01	; 1
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 3d2:	48 e8       	ldi	r20, 0x88	; 136
 3d4:	53 e1       	ldi	r21, 0x13	; 19
 3d6:	66 e0       	ldi	r22, 0x06	; 6
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 3de:	45 e0       	ldi	r20, 0x05	; 5
 3e0:	50 e0       	ldi	r21, 0x00	; 0
 3e2:	6c e0       	ldi	r22, 0x0C	; 12
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	0c 94 6d 00 	jmp	0xda	; 0xda <send_lcd>

000003ea <lcd_int32>:
 3ea:	8f 92       	push	r8
 3ec:	9f 92       	push	r9
 3ee:	af 92       	push	r10
 3f0:	bf 92       	push	r11
 3f2:	cf 92       	push	r12
 3f4:	df 92       	push	r13
 3f6:	ef 92       	push	r14
 3f8:	ff 92       	push	r15
 3fa:	0f 93       	push	r16
 3fc:	1f 93       	push	r17
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	cd b7       	in	r28, 0x3d	; 61
 404:	de b7       	in	r29, 0x3e	; 62
 406:	69 97       	sbiw	r28, 0x19	; 25
 408:	0f b6       	in	r0, 0x3f	; 63
 40a:	f8 94       	cli
 40c:	de bf       	out	0x3e, r29	; 62
 40e:	0f be       	out	0x3f, r0	; 63
 410:	cd bf       	out	0x3d, r28	; 61
 412:	f4 2e       	mov	r15, r20
 414:	12 2f       	mov	r17, r18
 416:	00 23       	and	r16, r16
 418:	59 f0       	breq	.+22     	; 0x430 <lcd_int32+0x46>
 41a:	4b 01       	movw	r8, r22
 41c:	5c 01       	movw	r10, r24
 41e:	88 24       	eor	r8, r8
 420:	b7 fc       	sbrc	r11, 7
 422:	83 94       	inc	r8
 424:	99 24       	eor	r9, r9
 426:	aa 24       	eor	r10, r10
 428:	bb 24       	eor	r11, r11
 42a:	08 2d       	mov	r16, r8
 42c:	97 fd       	sbrc	r25, 7
 42e:	8d c0       	rjmp	.+282    	; 0x54a <lcd_int32+0x160>
 430:	11 23       	and	r17, r17
 432:	09 f4       	brne	.+2      	; 0x436 <lcd_int32+0x4c>
 434:	82 c0       	rjmp	.+260    	; 0x53a <lcd_int32+0x150>
 436:	9e 01       	movw	r18, r28
 438:	2f 5f       	subi	r18, 0xFF	; 255
 43a:	3f 4f       	sbci	r19, 0xFF	; 255
 43c:	69 01       	movw	r12, r18
 43e:	59 01       	movw	r10, r18
 440:	88 24       	eor	r8, r8
 442:	8a 94       	dec	r8
 444:	81 0e       	add	r8, r17
 446:	91 2c       	mov	r9, r1
 448:	3f ef       	ldi	r19, 0xFF	; 255
 44a:	83 1a       	sub	r8, r19
 44c:	93 0a       	sbc	r9, r19
 44e:	8c 0c       	add	r8, r12
 450:	9d 1c       	adc	r9, r13
 452:	2a e0       	ldi	r18, 0x0A	; 10
 454:	30 e0       	ldi	r19, 0x00	; 0
 456:	40 e0       	ldi	r20, 0x00	; 0
 458:	50 e0       	ldi	r21, 0x00	; 0
 45a:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__divmodsi4>
 45e:	e6 2f       	mov	r30, r22
 460:	2a 8b       	std	Y+18, r18	; 0x12
 462:	3b 8b       	std	Y+19, r19	; 0x13
 464:	4c 8b       	std	Y+20, r20	; 0x14
 466:	5d 8b       	std	Y+21, r21	; 0x15
 468:	6a 89       	ldd	r22, Y+18	; 0x12
 46a:	7b 89       	ldd	r23, Y+19	; 0x13
 46c:	8c 89       	ldd	r24, Y+20	; 0x14
 46e:	9d 89       	ldd	r25, Y+21	; 0x15
 470:	20 e3       	ldi	r18, 0x30	; 48
 472:	2e 0f       	add	r18, r30
 474:	f5 01       	movw	r30, r10
 476:	21 93       	st	Z+, r18
 478:	5f 01       	movw	r10, r30
 47a:	e8 15       	cp	r30, r8
 47c:	f9 05       	cpc	r31, r9
 47e:	49 f7       	brne	.-46     	; 0x452 <lcd_int32+0x68>
 480:	bb 24       	eor	r11, r11
 482:	b3 94       	inc	r11
 484:	b1 0e       	add	r11, r17
 486:	f6 01       	movw	r30, r12
 488:	e1 0f       	add	r30, r17
 48a:	f1 1d       	adc	r31, r1
 48c:	2e e2       	ldi	r18, 0x2E	; 46
 48e:	20 83       	st	Z, r18
 490:	2a e0       	ldi	r18, 0x0A	; 10
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	40 e0       	ldi	r20, 0x00	; 0
 496:	50 e0       	ldi	r21, 0x00	; 0
 498:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__divmodsi4>
 49c:	e6 2f       	mov	r30, r22
 49e:	2a 8b       	std	Y+18, r18	; 0x12
 4a0:	3b 8b       	std	Y+19, r19	; 0x13
 4a2:	4c 8b       	std	Y+20, r20	; 0x14
 4a4:	5d 8b       	std	Y+21, r21	; 0x15
 4a6:	6e 8b       	std	Y+22, r22	; 0x16
 4a8:	7f 8b       	std	Y+23, r23	; 0x17
 4aa:	88 8f       	std	Y+24, r24	; 0x18
 4ac:	99 8f       	std	Y+25, r25	; 0x19
 4ae:	6a 89       	ldd	r22, Y+18	; 0x12
 4b0:	7b 89       	ldd	r23, Y+19	; 0x13
 4b2:	8c 89       	ldd	r24, Y+20	; 0x14
 4b4:	9d 89       	ldd	r25, Y+21	; 0x15
 4b6:	11 e0       	ldi	r17, 0x01	; 1
 4b8:	1b 0d       	add	r17, r11
 4ba:	d6 01       	movw	r26, r12
 4bc:	ab 0d       	add	r26, r11
 4be:	b1 1d       	adc	r27, r1
 4c0:	e0 5d       	subi	r30, 0xD0	; 208
 4c2:	ec 93       	st	X, r30
 4c4:	b1 2e       	mov	r11, r17
 4c6:	61 15       	cp	r22, r1
 4c8:	71 05       	cpc	r23, r1
 4ca:	81 05       	cpc	r24, r1
 4cc:	91 05       	cpc	r25, r1
 4ce:	01 f7       	brne	.-64     	; 0x490 <lcd_int32+0xa6>
 4d0:	ff 20       	and	r15, r15
 4d2:	61 f0       	breq	.+24     	; 0x4ec <lcd_int32+0x102>
 4d4:	e1 10       	cpse	r14, r1
 4d6:	37 c0       	rjmp	.+110    	; 0x546 <lcd_int32+0x15c>
 4d8:	80 e2       	ldi	r24, 0x20	; 32
 4da:	1f 15       	cp	r17, r15
 4dc:	38 f4       	brcc	.+14     	; 0x4ec <lcd_int32+0x102>
 4de:	f6 01       	movw	r30, r12
 4e0:	e1 0f       	add	r30, r17
 4e2:	f1 1d       	adc	r31, r1
 4e4:	80 83       	st	Z, r24
 4e6:	1f 5f       	subi	r17, 0xFF	; 255
 4e8:	1f 11       	cpse	r17, r15
 4ea:	f9 cf       	rjmp	.-14     	; 0x4de <lcd_int32+0xf4>
 4ec:	00 23       	and	r16, r16
 4ee:	31 f0       	breq	.+12     	; 0x4fc <lcd_int32+0x112>
 4f0:	f6 01       	movw	r30, r12
 4f2:	e1 0f       	add	r30, r17
 4f4:	f1 1d       	adc	r31, r1
 4f6:	8d e2       	ldi	r24, 0x2D	; 45
 4f8:	80 83       	st	Z, r24
 4fa:	1f 5f       	subi	r17, 0xFF	; 255
 4fc:	11 50       	subi	r17, 0x01	; 1
 4fe:	f6 01       	movw	r30, r12
 500:	e1 0f       	add	r30, r17
 502:	f1 1d       	adc	r31, r1
 504:	48 ee       	ldi	r20, 0xE8	; 232
 506:	53 e0       	ldi	r21, 0x03	; 3
 508:	60 81       	ld	r22, Z
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 510:	11 11       	cpse	r17, r1
 512:	f4 cf       	rjmp	.-24     	; 0x4fc <lcd_int32+0x112>
 514:	69 96       	adiw	r28, 0x19	; 25
 516:	0f b6       	in	r0, 0x3f	; 63
 518:	f8 94       	cli
 51a:	de bf       	out	0x3e, r29	; 62
 51c:	0f be       	out	0x3f, r0	; 63
 51e:	cd bf       	out	0x3d, r28	; 61
 520:	df 91       	pop	r29
 522:	cf 91       	pop	r28
 524:	1f 91       	pop	r17
 526:	0f 91       	pop	r16
 528:	ff 90       	pop	r15
 52a:	ef 90       	pop	r14
 52c:	df 90       	pop	r13
 52e:	cf 90       	pop	r12
 530:	bf 90       	pop	r11
 532:	af 90       	pop	r10
 534:	9f 90       	pop	r9
 536:	8f 90       	pop	r8
 538:	08 95       	ret
 53a:	b1 2c       	mov	r11, r1
 53c:	9e 01       	movw	r18, r28
 53e:	2f 5f       	subi	r18, 0xFF	; 255
 540:	3f 4f       	sbci	r19, 0xFF	; 255
 542:	69 01       	movw	r12, r18
 544:	a5 cf       	rjmp	.-182    	; 0x490 <lcd_int32+0xa6>
 546:	80 e3       	ldi	r24, 0x30	; 48
 548:	c8 cf       	rjmp	.-112    	; 0x4da <lcd_int32+0xf0>
 54a:	90 95       	com	r25
 54c:	80 95       	com	r24
 54e:	70 95       	com	r23
 550:	61 95       	neg	r22
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	6b cf       	rjmp	.-298    	; 0x430 <lcd_int32+0x46>

0000055a <lcd_int16>:
 55a:	5f 92       	push	r5
 55c:	6f 92       	push	r6
 55e:	7f 92       	push	r7
 560:	8f 92       	push	r8
 562:	9f 92       	push	r9
 564:	af 92       	push	r10
 566:	bf 92       	push	r11
 568:	cf 92       	push	r12
 56a:	df 92       	push	r13
 56c:	ef 92       	push	r14
 56e:	ff 92       	push	r15
 570:	0f 93       	push	r16
 572:	1f 93       	push	r17
 574:	cf 93       	push	r28
 576:	df 93       	push	r29
 578:	cd b7       	in	r28, 0x3d	; 61
 57a:	de b7       	in	r29, 0x3e	; 62
 57c:	61 97       	sbiw	r28, 0x11	; 17
 57e:	0f b6       	in	r0, 0x3f	; 63
 580:	f8 94       	cli
 582:	de bf       	out	0x3e, r29	; 62
 584:	0f be       	out	0x3f, r0	; 63
 586:	cd bf       	out	0x3d, r28	; 61
 588:	a6 2e       	mov	r10, r22
 58a:	54 2e       	mov	r5, r20
 58c:	62 2e       	mov	r6, r18
 58e:	79 2e       	mov	r7, r25
 590:	77 1c       	adc	r7, r7
 592:	77 24       	eor	r7, r7
 594:	77 1c       	adc	r7, r7
 596:	b7 2c       	mov	r11, r7
 598:	c7 2c       	mov	r12, r7
 59a:	d1 2c       	mov	r13, r1
 59c:	ee 27       	eor	r30, r30
 59e:	ff 27       	eor	r31, r31
 5a0:	ec 19       	sub	r30, r12
 5a2:	fd 09       	sbc	r31, r13
 5a4:	8e 27       	eor	r24, r30
 5a6:	9f 27       	eor	r25, r31
 5a8:	fc 01       	movw	r30, r24
 5aa:	ec 0d       	add	r30, r12
 5ac:	fd 1d       	adc	r31, r13
 5ae:	44 23       	and	r20, r20
 5b0:	09 f4       	brne	.+2      	; 0x5b4 <lcd_int16+0x5a>
 5b2:	8c c0       	rjmp	.+280    	; 0x6cc <lcd_int16+0x172>
 5b4:	ce 01       	movw	r24, r28
 5b6:	01 96       	adiw	r24, 0x01	; 1
 5b8:	7c 01       	movw	r14, r24
 5ba:	8c 01       	movw	r16, r24
 5bc:	88 24       	eor	r8, r8
 5be:	8a 94       	dec	r8
 5c0:	84 0e       	add	r8, r20
 5c2:	91 2c       	mov	r9, r1
 5c4:	9f ef       	ldi	r25, 0xFF	; 255
 5c6:	89 1a       	sub	r8, r25
 5c8:	99 0a       	sbc	r9, r25
 5ca:	8e 0c       	add	r8, r14
 5cc:	9f 1c       	adc	r9, r15
 5ce:	6a e0       	ldi	r22, 0x0A	; 10
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	cf 01       	movw	r24, r30
 5d4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__divmodhi4>
 5d8:	26 2f       	mov	r18, r22
 5da:	e2 2f       	mov	r30, r18
 5dc:	f7 2f       	mov	r31, r23
 5de:	80 5d       	subi	r24, 0xD0	; 208
 5e0:	d8 01       	movw	r26, r16
 5e2:	8d 93       	st	X+, r24
 5e4:	8d 01       	movw	r16, r26
 5e6:	a8 15       	cp	r26, r8
 5e8:	b9 05       	cpc	r27, r9
 5ea:	89 f7       	brne	.-30     	; 0x5ce <lcd_int16+0x74>
 5ec:	01 e0       	ldi	r16, 0x01	; 1
 5ee:	05 0d       	add	r16, r5
 5f0:	d7 01       	movw	r26, r14
 5f2:	a5 0d       	add	r26, r5
 5f4:	b1 1d       	adc	r27, r1
 5f6:	8e e2       	ldi	r24, 0x2E	; 46
 5f8:	8c 93       	st	X, r24
 5fa:	6a e0       	ldi	r22, 0x0A	; 10
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	cf 01       	movw	r24, r30
 600:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__divmodhi4>
 604:	26 2f       	mov	r18, r22
 606:	e2 2f       	mov	r30, r18
 608:	f7 2f       	mov	r31, r23
 60a:	11 e0       	ldi	r17, 0x01	; 1
 60c:	10 0f       	add	r17, r16
 60e:	d7 01       	movw	r26, r14
 610:	a0 0f       	add	r26, r16
 612:	b1 1d       	adc	r27, r1
 614:	80 5d       	subi	r24, 0xD0	; 208
 616:	8c 93       	st	X, r24
 618:	01 2f       	mov	r16, r17
 61a:	30 97       	sbiw	r30, 0x00	; 0
 61c:	71 f7       	brne	.-36     	; 0x5fa <lcd_int16+0xa0>
 61e:	61 10       	cpse	r6, r1
 620:	15 c0       	rjmp	.+42     	; 0x64c <lcd_int16+0xf2>
 622:	77 20       	and	r7, r7
 624:	39 f0       	breq	.+14     	; 0x634 <lcd_int16+0xda>
 626:	11 e0       	ldi	r17, 0x01	; 1
 628:	10 0f       	add	r17, r16
 62a:	f7 01       	movw	r30, r14
 62c:	e0 0f       	add	r30, r16
 62e:	f1 1d       	adc	r31, r1
 630:	8d e2       	ldi	r24, 0x2D	; 45
 632:	80 83       	st	Z, r24
 634:	aa 20       	and	r10, r10
 636:	41 f1       	breq	.+80     	; 0x688 <lcd_int16+0x12e>
 638:	81 2f       	mov	r24, r17
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	2a 2d       	mov	r18, r10
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	82 17       	cp	r24, r18
 642:	93 07       	cpc	r25, r19
 644:	0c f5       	brge	.+66     	; 0x688 <lcd_int16+0x12e>
 646:	b1 2c       	mov	r11, r1
 648:	40 e2       	ldi	r20, 0x20	; 32
 64a:	0c c0       	rjmp	.+24     	; 0x664 <lcd_int16+0x10a>
 64c:	aa 20       	and	r10, r10
 64e:	a1 f0       	breq	.+40     	; 0x678 <lcd_int16+0x11e>
 650:	81 2f       	mov	r24, r17
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	2a 2d       	mov	r18, r10
 656:	30 e0       	ldi	r19, 0x00	; 0
 658:	2c 19       	sub	r18, r12
 65a:	3d 09       	sbc	r19, r13
 65c:	82 17       	cp	r24, r18
 65e:	93 07       	cpc	r25, r19
 660:	5c f4       	brge	.+22     	; 0x678 <lcd_int16+0x11e>
 662:	40 e3       	ldi	r20, 0x30	; 48
 664:	1f 5f       	subi	r17, 0xFF	; 255
 666:	f7 01       	movw	r30, r14
 668:	e8 0f       	add	r30, r24
 66a:	f9 1f       	adc	r31, r25
 66c:	40 83       	st	Z, r20
 66e:	81 2f       	mov	r24, r17
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	82 17       	cp	r24, r18
 674:	93 07       	cpc	r25, r19
 676:	b4 f3       	brlt	.-20     	; 0x664 <lcd_int16+0x10a>
 678:	bb 20       	and	r11, r11
 67a:	31 f0       	breq	.+12     	; 0x688 <lcd_int16+0x12e>
 67c:	f7 01       	movw	r30, r14
 67e:	e1 0f       	add	r30, r17
 680:	f1 1d       	adc	r31, r1
 682:	8d e2       	ldi	r24, 0x2D	; 45
 684:	80 83       	st	Z, r24
 686:	1f 5f       	subi	r17, 0xFF	; 255
 688:	11 50       	subi	r17, 0x01	; 1
 68a:	f7 01       	movw	r30, r14
 68c:	e1 0f       	add	r30, r17
 68e:	f1 1d       	adc	r31, r1
 690:	48 ee       	ldi	r20, 0xE8	; 232
 692:	53 e0       	ldi	r21, 0x03	; 3
 694:	60 81       	ld	r22, Z
 696:	81 e0       	ldi	r24, 0x01	; 1
 698:	0e 94 6d 00 	call	0xda	; 0xda <send_lcd>
 69c:	11 11       	cpse	r17, r1
 69e:	f4 cf       	rjmp	.-24     	; 0x688 <lcd_int16+0x12e>
 6a0:	61 96       	adiw	r28, 0x11	; 17
 6a2:	0f b6       	in	r0, 0x3f	; 63
 6a4:	f8 94       	cli
 6a6:	de bf       	out	0x3e, r29	; 62
 6a8:	0f be       	out	0x3f, r0	; 63
 6aa:	cd bf       	out	0x3d, r28	; 61
 6ac:	df 91       	pop	r29
 6ae:	cf 91       	pop	r28
 6b0:	1f 91       	pop	r17
 6b2:	0f 91       	pop	r16
 6b4:	ff 90       	pop	r15
 6b6:	ef 90       	pop	r14
 6b8:	df 90       	pop	r13
 6ba:	cf 90       	pop	r12
 6bc:	bf 90       	pop	r11
 6be:	af 90       	pop	r10
 6c0:	9f 90       	pop	r9
 6c2:	8f 90       	pop	r8
 6c4:	7f 90       	pop	r7
 6c6:	6f 90       	pop	r6
 6c8:	5f 90       	pop	r5
 6ca:	08 95       	ret
 6cc:	00 e0       	ldi	r16, 0x00	; 0
 6ce:	ce 01       	movw	r24, r28
 6d0:	01 96       	adiw	r24, 0x01	; 1
 6d2:	7c 01       	movw	r14, r24
 6d4:	92 cf       	rjmp	.-220    	; 0x5fa <lcd_int16+0xa0>

000006d6 <main>:
/*******************************************************/

int main()
{
//initalize the SPI port then the LCD
spi_init();
 6d6:	0e 94 5a 00 	call	0xb4	; 0xb4 <spi_init>
lcd_init(); 
 6da:	0e 94 bc 01 	call	0x378	; 0x378 <lcd_init>
clear_display();
 6de:	0e 94 75 01 	call	0x2ea	; 0x2ea <clear_display>

//Initalize ADC and its ports
DDRF  &= ~(_BV(DDF7)); //make port F bit 7 is ADC input  
 6e2:	80 91 61 00 	lds	r24, 0x0061
 6e6:	8f 77       	andi	r24, 0x7F	; 127
 6e8:	80 93 61 00 	sts	0x0061, r24
PORTF &= ~(_BV(PF7));  //port F bit 7 pullups must be off
 6ec:	80 91 62 00 	lds	r24, 0x0062
 6f0:	8f 77       	andi	r24, 0x7F	; 127
 6f2:	80 93 62 00 	sts	0x0062, r24

ADMUX = (0<<REFS1)|(1<<REFS0)|(1<<MUX2)|(1<<MUX1)|(1<<MUX0); //single-ended, input PORTF bit 7, right adjusted, 10 bits
 6f6:	87 e4       	ldi	r24, 0x47	; 71
 6f8:	87 b9       	out	0x07, r24	; 7

ADCSRA = (1<<ADEN)|(0<<ADFR)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);//ADC enabled, don't start yet, single shot mode
 6fa:	8f e8       	ldi	r24, 0x8F	; 143
 6fc:	86 b9       	out	0x06, r24	; 6
  //remainder in a structure called div_t that contains two members, quot and rem. 
  
  //now determine Vin, where Vin = (adc_result/204.8)
  fp_adc_result = div(adc_result, 205);              //do division by 205 (204.8 to be exact)
  itoa(fp_adc_result.quot, lcd_str_h, 10);           //convert non-fractional part to ascii string
  fp_low_result = div((fp_adc_result.rem*100), 205); //get the decimal fraction into non-fractional form 
 6fe:	c4 e6       	ldi	r28, 0x64	; 100
ADMUX = (0<<REFS1)|(1<<REFS0)|(1<<MUX2)|(1<<MUX1)|(1<<MUX0); //single-ended, input PORTF bit 7, right adjusted, 10 bits

ADCSRA = (1<<ADEN)|(0<<ADFR)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);//ADC enabled, don't start yet, single shot mode
                             //division factor is 128 (125khz)
while(1){ 
  ADCSRA |= (1<<ADSC); //poke ADSC and start conversion
 700:	36 9a       	sbi	0x06, 6	; 6

  while(bit_is_clear(ADCSRA, ADIF)){}; //spin while interrupt flag not set
 702:	34 9b       	sbis	0x06, 4	; 6
 704:	fe cf       	rjmp	.-4      	; 0x702 <main+0x2c>

  ADCSRA |= (1<<ADIF); //its done, clear flag by writing a one 
 706:	34 9a       	sbi	0x06, 4	; 6

  adc_result = ADC;                      //read the ADC output as 16 bits
 708:	84 b1       	in	r24, 0x04	; 4
 70a:	95 b1       	in	r25, 0x05	; 5
 70c:	90 93 02 01 	sts	0x0102, r25
 710:	80 93 01 01 	sts	0x0101, r24

  //div() function computes the value num/denom and returns the quotient and
  //remainder in a structure called div_t that contains two members, quot and rem. 
  
  //now determine Vin, where Vin = (adc_result/204.8)
  fp_adc_result = div(adc_result, 205);              //do division by 205 (204.8 to be exact)
 714:	6d ec       	ldi	r22, 0xCD	; 205
 716:	70 e0       	ldi	r23, 0x00	; 0
 718:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__divmodhi4>
 71c:	9b 01       	movw	r18, r22
 71e:	60 93 28 01 	sts	0x0128, r22
 722:	70 93 29 01 	sts	0x0129, r23
 726:	80 93 2a 01 	sts	0x012A, r24
 72a:	90 93 2b 01 	sts	0x012B, r25
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 72e:	4a e0       	ldi	r20, 0x0A	; 10
 730:	68 e1       	ldi	r22, 0x18	; 24
 732:	71 e0       	ldi	r23, 0x01	; 1
 734:	c9 01       	movw	r24, r18
 736:	0e 94 45 04 	call	0x88a	; 0x88a <__itoa_ncheck>
  itoa(fp_adc_result.quot, lcd_str_h, 10);           //convert non-fractional part to ascii string
  fp_low_result = div((fp_adc_result.rem*100), 205); //get the decimal fraction into non-fractional form 
 73a:	80 91 2a 01 	lds	r24, 0x012A
 73e:	90 91 2b 01 	lds	r25, 0x012B
 742:	6d ec       	ldi	r22, 0xCD	; 205
 744:	70 e0       	ldi	r23, 0x00	; 0
 746:	9c 01       	movw	r18, r24
 748:	c2 9f       	mul	r28, r18
 74a:	c0 01       	movw	r24, r0
 74c:	c3 9f       	mul	r28, r19
 74e:	90 0d       	add	r25, r0
 750:	11 24       	eor	r1, r1
 752:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__divmodhi4>
 756:	9b 01       	movw	r18, r22
 758:	60 93 14 01 	sts	0x0114, r22
 75c:	70 93 15 01 	sts	0x0115, r23
 760:	80 93 16 01 	sts	0x0116, r24
 764:	90 93 17 01 	sts	0x0117, r25
 768:	4a e0       	ldi	r20, 0x0A	; 10
 76a:	63 e0       	ldi	r22, 0x03	; 3
 76c:	71 e0       	ldi	r23, 0x01	; 1
 76e:	c9 01       	movw	r24, r18
 770:	0e 94 45 04 	call	0x88a	; 0x88a <__itoa_ncheck>
  itoa(fp_low_result.quot, lcd_str_l, 10);           //convert fractional part to ascii string

  //send string to LCD
  string2lcd(lcd_str_h);  //write upper half
 774:	88 e1       	ldi	r24, 0x18	; 24
 776:	91 e0       	ldi	r25, 0x01	; 1
 778:	0e 94 99 01 	call	0x332	; 0x332 <string2lcd>
  char2lcd('.');          //write decimal point
 77c:	8e e2       	ldi	r24, 0x2E	; 46
 77e:	0e 94 93 01 	call	0x326	; 0x326 <char2lcd>
  string2lcd(lcd_str_l);  //write lower half
 782:	83 e0       	ldi	r24, 0x03	; 3
 784:	91 e0       	ldi	r25, 0x01	; 1
 786:	0e 94 99 01 	call	0x332	; 0x332 <string2lcd>

  for(i=0;i<=10;i++){ _delay_ms(50);}  //delay 0.5 sec
 78a:	10 92 13 01 	sts	0x0113, r1
 78e:	3f ef       	ldi	r19, 0xFF	; 255
 790:	80 e7       	ldi	r24, 0x70	; 112
 792:	92 e0       	ldi	r25, 0x02	; 2
 794:	31 50       	subi	r19, 0x01	; 1
 796:	80 40       	sbci	r24, 0x00	; 0
 798:	90 40       	sbci	r25, 0x00	; 0
 79a:	e1 f7       	brne	.-8      	; 0x794 <main+0xbe>
 79c:	00 c0       	rjmp	.+0      	; 0x79e <main+0xc8>
 79e:	00 00       	nop
 7a0:	80 91 13 01 	lds	r24, 0x0113
 7a4:	8f 5f       	subi	r24, 0xFF	; 255
 7a6:	80 93 13 01 	sts	0x0113, r24
 7aa:	8b 30       	cpi	r24, 0x0B	; 11
 7ac:	80 f3       	brcs	.-32     	; 0x78e <main+0xb8>
  clear_display();
 7ae:	0e 94 75 01 	call	0x2ea	; 0x2ea <clear_display>
  cursor_home();
 7b2:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <cursor_home>
  } //while
 7b6:	a4 cf       	rjmp	.-184    	; 0x700 <main+0x2a>

000007b8 <__divmodhi4>:
 7b8:	97 fb       	bst	r25, 7
 7ba:	07 2e       	mov	r0, r23
 7bc:	16 f4       	brtc	.+4      	; 0x7c2 <__divmodhi4+0xa>
 7be:	00 94       	com	r0
 7c0:	07 d0       	rcall	.+14     	; 0x7d0 <__divmodhi4_neg1>
 7c2:	77 fd       	sbrc	r23, 7
 7c4:	09 d0       	rcall	.+18     	; 0x7d8 <__divmodhi4_neg2>
 7c6:	0e 94 0f 04 	call	0x81e	; 0x81e <__udivmodhi4>
 7ca:	07 fc       	sbrc	r0, 7
 7cc:	05 d0       	rcall	.+10     	; 0x7d8 <__divmodhi4_neg2>
 7ce:	3e f4       	brtc	.+14     	; 0x7de <__divmodhi4_exit>

000007d0 <__divmodhi4_neg1>:
 7d0:	90 95       	com	r25
 7d2:	81 95       	neg	r24
 7d4:	9f 4f       	sbci	r25, 0xFF	; 255
 7d6:	08 95       	ret

000007d8 <__divmodhi4_neg2>:
 7d8:	70 95       	com	r23
 7da:	61 95       	neg	r22
 7dc:	7f 4f       	sbci	r23, 0xFF	; 255

000007de <__divmodhi4_exit>:
 7de:	08 95       	ret

000007e0 <__divmodsi4>:
 7e0:	05 2e       	mov	r0, r21
 7e2:	97 fb       	bst	r25, 7
 7e4:	1e f4       	brtc	.+6      	; 0x7ec <__divmodsi4+0xc>
 7e6:	00 94       	com	r0
 7e8:	0e 94 07 04 	call	0x80e	; 0x80e <__negsi2>
 7ec:	57 fd       	sbrc	r21, 7
 7ee:	07 d0       	rcall	.+14     	; 0x7fe <__divmodsi4_neg2>
 7f0:	0e 94 23 04 	call	0x846	; 0x846 <__udivmodsi4>
 7f4:	07 fc       	sbrc	r0, 7
 7f6:	03 d0       	rcall	.+6      	; 0x7fe <__divmodsi4_neg2>
 7f8:	4e f4       	brtc	.+18     	; 0x80c <__divmodsi4_exit>
 7fa:	0c 94 07 04 	jmp	0x80e	; 0x80e <__negsi2>

000007fe <__divmodsi4_neg2>:
 7fe:	50 95       	com	r21
 800:	40 95       	com	r20
 802:	30 95       	com	r19
 804:	21 95       	neg	r18
 806:	3f 4f       	sbci	r19, 0xFF	; 255
 808:	4f 4f       	sbci	r20, 0xFF	; 255
 80a:	5f 4f       	sbci	r21, 0xFF	; 255

0000080c <__divmodsi4_exit>:
 80c:	08 95       	ret

0000080e <__negsi2>:
 80e:	90 95       	com	r25
 810:	80 95       	com	r24
 812:	70 95       	com	r23
 814:	61 95       	neg	r22
 816:	7f 4f       	sbci	r23, 0xFF	; 255
 818:	8f 4f       	sbci	r24, 0xFF	; 255
 81a:	9f 4f       	sbci	r25, 0xFF	; 255
 81c:	08 95       	ret

0000081e <__udivmodhi4>:
 81e:	aa 1b       	sub	r26, r26
 820:	bb 1b       	sub	r27, r27
 822:	51 e1       	ldi	r21, 0x11	; 17
 824:	07 c0       	rjmp	.+14     	; 0x834 <__udivmodhi4_ep>

00000826 <__udivmodhi4_loop>:
 826:	aa 1f       	adc	r26, r26
 828:	bb 1f       	adc	r27, r27
 82a:	a6 17       	cp	r26, r22
 82c:	b7 07       	cpc	r27, r23
 82e:	10 f0       	brcs	.+4      	; 0x834 <__udivmodhi4_ep>
 830:	a6 1b       	sub	r26, r22
 832:	b7 0b       	sbc	r27, r23

00000834 <__udivmodhi4_ep>:
 834:	88 1f       	adc	r24, r24
 836:	99 1f       	adc	r25, r25
 838:	5a 95       	dec	r21
 83a:	a9 f7       	brne	.-22     	; 0x826 <__udivmodhi4_loop>
 83c:	80 95       	com	r24
 83e:	90 95       	com	r25
 840:	bc 01       	movw	r22, r24
 842:	cd 01       	movw	r24, r26
 844:	08 95       	ret

00000846 <__udivmodsi4>:
 846:	a1 e2       	ldi	r26, 0x21	; 33
 848:	1a 2e       	mov	r1, r26
 84a:	aa 1b       	sub	r26, r26
 84c:	bb 1b       	sub	r27, r27
 84e:	fd 01       	movw	r30, r26
 850:	0d c0       	rjmp	.+26     	; 0x86c <__udivmodsi4_ep>

00000852 <__udivmodsi4_loop>:
 852:	aa 1f       	adc	r26, r26
 854:	bb 1f       	adc	r27, r27
 856:	ee 1f       	adc	r30, r30
 858:	ff 1f       	adc	r31, r31
 85a:	a2 17       	cp	r26, r18
 85c:	b3 07       	cpc	r27, r19
 85e:	e4 07       	cpc	r30, r20
 860:	f5 07       	cpc	r31, r21
 862:	20 f0       	brcs	.+8      	; 0x86c <__udivmodsi4_ep>
 864:	a2 1b       	sub	r26, r18
 866:	b3 0b       	sbc	r27, r19
 868:	e4 0b       	sbc	r30, r20
 86a:	f5 0b       	sbc	r31, r21

0000086c <__udivmodsi4_ep>:
 86c:	66 1f       	adc	r22, r22
 86e:	77 1f       	adc	r23, r23
 870:	88 1f       	adc	r24, r24
 872:	99 1f       	adc	r25, r25
 874:	1a 94       	dec	r1
 876:	69 f7       	brne	.-38     	; 0x852 <__udivmodsi4_loop>
 878:	60 95       	com	r22
 87a:	70 95       	com	r23
 87c:	80 95       	com	r24
 87e:	90 95       	com	r25
 880:	9b 01       	movw	r18, r22
 882:	ac 01       	movw	r20, r24
 884:	bd 01       	movw	r22, r26
 886:	cf 01       	movw	r24, r30
 888:	08 95       	ret

0000088a <__itoa_ncheck>:
 88a:	bb 27       	eor	r27, r27
 88c:	4a 30       	cpi	r20, 0x0A	; 10
 88e:	31 f4       	brne	.+12     	; 0x89c <__itoa_ncheck+0x12>
 890:	99 23       	and	r25, r25
 892:	22 f4       	brpl	.+8      	; 0x89c <__itoa_ncheck+0x12>
 894:	bd e2       	ldi	r27, 0x2D	; 45
 896:	90 95       	com	r25
 898:	81 95       	neg	r24
 89a:	9f 4f       	sbci	r25, 0xFF	; 255
 89c:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__utoa_common>

000008a0 <__utoa_ncheck>:
 8a0:	bb 27       	eor	r27, r27

000008a2 <__utoa_common>:
 8a2:	fb 01       	movw	r30, r22
 8a4:	55 27       	eor	r21, r21
 8a6:	aa 27       	eor	r26, r26
 8a8:	88 0f       	add	r24, r24
 8aa:	99 1f       	adc	r25, r25
 8ac:	aa 1f       	adc	r26, r26
 8ae:	a4 17       	cp	r26, r20
 8b0:	10 f0       	brcs	.+4      	; 0x8b6 <__utoa_common+0x14>
 8b2:	a4 1b       	sub	r26, r20
 8b4:	83 95       	inc	r24
 8b6:	50 51       	subi	r21, 0x10	; 16
 8b8:	b9 f7       	brne	.-18     	; 0x8a8 <__utoa_common+0x6>
 8ba:	a0 5d       	subi	r26, 0xD0	; 208
 8bc:	aa 33       	cpi	r26, 0x3A	; 58
 8be:	08 f0       	brcs	.+2      	; 0x8c2 <__utoa_common+0x20>
 8c0:	a9 5d       	subi	r26, 0xD9	; 217
 8c2:	a1 93       	st	Z+, r26
 8c4:	00 97       	sbiw	r24, 0x00	; 0
 8c6:	79 f7       	brne	.-34     	; 0x8a6 <__utoa_common+0x4>
 8c8:	b1 11       	cpse	r27, r1
 8ca:	b1 93       	st	Z+, r27
 8cc:	11 92       	st	Z+, r1
 8ce:	cb 01       	movw	r24, r22
 8d0:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <strrev>

000008d4 <strrev>:
 8d4:	dc 01       	movw	r26, r24
 8d6:	fc 01       	movw	r30, r24
 8d8:	67 2f       	mov	r22, r23
 8da:	71 91       	ld	r23, Z+
 8dc:	77 23       	and	r23, r23
 8de:	e1 f7       	brne	.-8      	; 0x8d8 <strrev+0x4>
 8e0:	32 97       	sbiw	r30, 0x02	; 2
 8e2:	04 c0       	rjmp	.+8      	; 0x8ec <strrev+0x18>
 8e4:	7c 91       	ld	r23, X
 8e6:	6d 93       	st	X+, r22
 8e8:	70 83       	st	Z, r23
 8ea:	62 91       	ld	r22, -Z
 8ec:	ae 17       	cp	r26, r30
 8ee:	bf 07       	cpc	r27, r31
 8f0:	c8 f3       	brcs	.-14     	; 0x8e4 <strrev+0x10>
 8f2:	08 95       	ret

000008f4 <_exit>:
 8f4:	f8 94       	cli

000008f6 <__stop_program>:
 8f6:	ff cf       	rjmp	.-2      	; 0x8f6 <__stop_program>
